dig[nrow(dig):(nrow(dig)-1),] <- 2
t1     <- xtable(tb, digits = dig)
lines  <- print(t1, sanitize.text.function = identity,booktabs=TRUE,NA.string = '$-$')
lines  <- strsplit(lines,'\n')[[1]]
lines[7] <- " & \\multicolumn{6}{c}{ML-R}  & \\multicolumn{6}{c}{ML-C}\\\\ \\cmidrule(lr){2-7} \\cmidrule(lr){8-13}"
lines[7] <- paste(lines[7]," & \\multicolumn{3}{c}{BM}  & \\multicolumn{3}{c}{Optimal} & \\multicolumn{3}{c}{BM}  & \\multicolumn{3}{c}{Optimal}  \\\\"  )
lines[7] <- paste(lines[7]," \\cmidrule(lr){2-4} \\cmidrule(lr){5-7} \\cmidrule(lr){8-10} \\cmidrule(lr){11-13} ")
lines[7] <-  paste(lines[7], " & Long & Short & Diff. & Long & Short & Diff. & Long & Short & Diff. & Long & Short & Diff. \\\\ ")
lines[8] <- " \\cmidrule(lr){2-2}\\cmidrule(lr){3-3} \\cmidrule(lr){4-4}  \\cmidrule(lr){5-5} \\cmidrule(lr){6-6} \\cmidrule(lr){7-7} \\cmidrule(lr){8-8} \\cmidrule(lr){9-9} \\cmidrule(lr){10-10}\\cmidrule(lr){11-11}\\cmidrule(lr){12-12}\\cmidrule(lr){13-13} "
lines[5] <- "\\begin{tabular}{ccccccccccccc}"
lines <- lines[grep('begin{tabular}',lines,fixed = TRUE) : grep('end{tabular}',lines,fixed = TRUE)]
fileConn <- '../tables/Table_Characteristics_ML.tex'
write(lines,fileConn)
# Linear Models
idx <- order(abs(char.gap$glm_td_diff),decreasing = TRUE)
tb <- cbind( char.medians.long[idx[1:nchars], mdl.order],char.medians.short[idx[1:nchars], mdl.order.short], char.gap[idx[1:nchars],mdl.order.gap])
tb <- 100*tb[,c('ols_td_top','ols_td_bot','ols_td_diff',
'ols_opt_top','ols_opt_bot','ols_opt_diff',
'glm_td_top','glm_td_bot','glm_td_diff',
'glm_opt_top','glm_opt_bot','glm_opt_diff')]
tb
rownames(tb) <- sanitize(rownames(tb))
tb
dig = matrix(2,ncol=ncol(tb)+1,nrow=nrow(tb))
dig[nrow(dig):(nrow(dig)-1),] <- 2
t1     <- xtable(tb, digits = dig)
lines  <- print(t1, sanitize.text.function = identity,booktabs=TRUE,NA.string = '$-$')
lines  <- strsplit(lines,'\n')[[1]]
lines[7] <- " & \\multicolumn{6}{c}{LIN-R}  & \\multicolumn{6}{c}{LIN-C}\\\\ \\cmidrule(lr){2-7} \\cmidrule(lr){8-13}"
lines[7] <- paste(lines[7]," & \\multicolumn{3}{c}{BM}  & \\multicolumn{3}{c}{Optimal} & \\multicolumn{3}{c}{BM}  & \\multicolumn{3}{c}{Optimal}  \\\\"  )
lines[7] <- paste(lines[7]," \\cmidrule(lr){2-4} \\cmidrule(lr){5-7} \\cmidrule(lr){8-10} \\cmidrule(lr){11-13} ")
lines[7] <-  paste(lines[7], " & Long & Short & Diff. & Long & Short & Diff. & Long & Short & Diff. & Long & Short & Diff. \\\\ ")
lines[8] <- " \\cmidrule(lr){2-2}\\cmidrule(lr){3-3} \\cmidrule(lr){4-4}  \\cmidrule(lr){5-5} \\cmidrule(lr){6-6} \\cmidrule(lr){7-7} \\cmidrule(lr){8-8} \\cmidrule(lr){9-9} \\cmidrule(lr){10-10}\\cmidrule(lr){11-11}\\cmidrule(lr){12-12}\\cmidrule(lr){13-13} "
lines[5] <- "\\begin{tabular}{ccccccccccccc}"
lines <- lines[grep('begin{tabular}',lines,fixed = TRUE) : grep('end{tabular}',lines,fixed = TRUE)]
fileConn <- '../tables/Table_Characteristics_LIN.tex'
write(lines,fileConn)
idx <- order(abs(char.gap$glm_opt_diff),decreasing = TRUE)
tb <- cbind( char.medians.long[idx[1:nchars], mdl.order],char.medians.short[idx[1:nchars], mdl.order.short], char.gap[idx[1:nchars],mdl.order.gap])
tb <- 100*tb[,c('ols_td_top','ols_td_bot','ols_td_diff',
'ols_opt_top','ols_opt_bot','ols_opt_diff',
'glm_td_top','glm_td_bot','glm_td_diff',
'glm_opt_top','glm_opt_bot','glm_opt_diff')]
tb
rownames(tb) <- sanitize(rownames(tb))
tb
dig = matrix(2,ncol=ncol(tb)+1,nrow=nrow(tb))
dig[nrow(dig):(nrow(dig)-1),] <- 2
t1     <- xtable(tb, digits = dig)
lines  <- print(t1, sanitize.text.function = identity,booktabs=TRUE,NA.string = '$-$')
lines  <- strsplit(lines,'\n')[[1]]
lines[7] <- " & \\multicolumn{6}{c}{LIN-R}  & \\multicolumn{6}{c}{LIN-C}\\\\ \\cmidrule(lr){2-7} \\cmidrule(lr){8-13}"
lines[7] <- paste(lines[7]," & \\multicolumn{3}{c}{BM}  & \\multicolumn{3}{c}{Optimal} & \\multicolumn{3}{c}{BM}  & \\multicolumn{3}{c}{Optimal}  \\\\"  )
lines[7] <- paste(lines[7]," \\cmidrule(lr){2-4} \\cmidrule(lr){5-7} \\cmidrule(lr){8-10} \\cmidrule(lr){11-13} ")
lines[7] <-  paste(lines[7], " & Long & Short & Diff. & Long & Short & Diff. & Long & Short & Diff. & Long & Short & Diff. \\\\ ")
lines[8] <- " \\cmidrule(lr){2-2}\\cmidrule(lr){3-3} \\cmidrule(lr){4-4}  \\cmidrule(lr){5-5} \\cmidrule(lr){6-6} \\cmidrule(lr){7-7} \\cmidrule(lr){8-8} \\cmidrule(lr){9-9} \\cmidrule(lr){10-10}\\cmidrule(lr){11-11}\\cmidrule(lr){12-12}\\cmidrule(lr){13-13} "
lines[5] <- "\\begin{tabular}{ccccccccccccc}"
lines <- lines[grep('begin{tabular}',lines,fixed = TRUE) : grep('end{tabular}',lines,fixed = TRUE)]
fileConn <- '../tables/Table_Characteristics_LIN.tex'
write(lines,fileConn)
rm(list=ls())
library(dplyr)
library(lubridate)
library(xtable)
source('../utils.R')
# Load portfolio data.
ptf.data <- readRDS('../04_LambdaSelection/PortfolioData.RDS')
# Characteristics
data.chars <- readRDS('../data/prediction_dataset_2025.RDS')
chars <- colnames(data.chars)
chars <- chars[-c(1,2,3)]
data.chars <- merge(ptf.data, data.chars, by = c('permno','date'))
# Construct portfolio returns.
mutate_vars_long = colnames(ptf.data)[c( grep("td_top", colnames(ptf.data)) ,
grep("opt_top", colnames(ptf.data)))
]
mutate_vars_short = colnames(ptf.data)[c( grep("td_bot", colnames(ptf.data)) ,
grep("opt_bot", colnames(ptf.data)))]
chars <- chars[-which(chars=='ret_dec')]
chars <- chars[-which(chars=='mcap')]
char.medians.long <- char.medians.short <-  cbind.data.frame(matrix(NA,nrow=length(chars),ncol=length(mutate_vars_long)))
colnames(char.medians.long) <- mutate_vars_long
colnames(char.medians.short) <-  mutate_vars_short
rownames(char.medians.long) <- rownames(char.medians.short) <- chars
for( char in chars ){
char.medians.long[char,] <- data.chars %>% filter(date>='1987-01-01') %>% ungroup() %>%
summarise_at(mutate_vars_long, list(~mean(eval(parse(text=char))[.x],na.rm=TRUE)))
char.medians.short[char,] <- data.chars %>% filter(date>='1987-01-01') %>% ungroup() %>%
summarise_at(mutate_vars_short, list(~mean(eval(parse(text=char))[.x],na.rm=TRUE)))
cat('.')
}
char.gap <- (char.medians.long-char.medians.short)
colnames(char.gap) <- gsub('top','diff',colnames(char.gap))
colSums(abs(char.gap))
colSums(abs(100*char.gap))
colSums(abs(char.gap))
char.gap
boxplot(abs(char.gap))
plot(char.gap$xgb_c_td_diff,char.gap$xgb_c_opt_diff)
abline(a=0,b=1)
plot(char.gap$xgb_r_td_diff,char.gap$xgb_r_opt_diff)
abline(a=0,b=1)
plot(char.gap$glm_td_diff,char.gap$glm_opt_diff)
abline(a=0,b=1)
plot(char.gap$ols_td_diff,char.gap$ols_opt_diff)
abline(a=0,b=1)
plot(char.gap$xgb_c_td_diff,char.gap$xgb_c_opt_diff)
abline(a=0,b=1)
mean(char.medians.long$xgb_c_opt_top - char.medians.long$xgb_c_td_top)
char.gap
head(char.gap)
head(char.gap)
plot(char.gap$ols_td_diff)
points(char.gap$ols_opt_diff,col='red')
# Plot
head(char.gap)
# Plot
char.gap.melt = reshape2::melt(char.gap)
head(char.gap)
head(char.gap.melt)
# Plot
char.gap.melt = reshape2::melt(char.gap,id=rownames(char.gap))
tmp$id = rownames(char.gap)
# Plot
tmp = char.gap
tmp$id = rownames(char.gap)
char.gap.melt = reshape2::melt(tmp,id=id)
char.gap.melt = reshape2::melt(tmp)
head(chat.gap.melt)
head(char.gap.melt)
ggplot(df, aes(x = id, y = value)) +
geom_point(size = 2, color = "blue") +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +                                 # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
library(ggplot2)
ggplot(df, aes(x = id, y = value)) +
geom_point(size = 2, color = "blue") +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +                                 # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
ggplot(char.gap.melt, aes(x = id, y = value)) +
geom_point(size = 2, color = "blue") +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +                                 # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
head(char.gpa)
head(char.gap.melt)
ggplot(char.gap.melt, aes(x = id, y = value)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +                                 # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
ggplot(char.gap.melt, aes(x = id, y = value, color=variable)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +                                 # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
char.gap.melt
char.gap.melt[1,]
char.gap.melt$variable
char.gap.melt$id
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +                                 # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(-1,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
head(char.gap.melt)
tmp = char.gap[,grep('opt',colnames(char.gap))]
tmp$id = rownames(char.gap)
char.gap.melt = reshape2::melt(tmp)
head(char.gap.melt)
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(-1,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
tmp = char.gap
tmp = char.medians.long
tmp$id = rownames(char.gap)
char.gap.melt = reshape2::melt(tmp)
head(char.gap.melt)
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(-1,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(0,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
tmp = char.medians.short
tmp$id = rownames(char.gap)
char.gap.melt = reshape2::melt(tmp)
head(char.gap.melt)
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(0,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
tmp = char.gap
tmp$id = rownames(char.gap)
char.gap.melt = reshape2::melt(tmp)
head(char.gap.melt)
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(0,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(-1,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
xgb_c_opt_ptf = c(char.medians.long$xgb_c_opt_top,char.medians.short$xgb_c_opt_bot)
xgb_c_opt_ptf = c(char.medians.long$xgb_c_opt_top,char.medians.short$xgb_c_opt_bot)
xgb_r_opt_ptf = c(char.medians.long$xgb_r_opt_top,char.medians.short$xgb_r_opt_bot)
glm_opt_ptf = c(char.medians.long$glm_opt_top,char.medians.short$glm_opt_bot)
ols_opt_ptf = c(char.medians.long$ols_opt_top,char.medians.short$ols_opt_bot)
xgb_c_opt_ptf = c(char.medians.long$xgb_c_opt_top,char.medians.short$xgb_c_opt_bot)
xgb_r_opt_ptf = c(char.medians.long$xgb_r_opt_top,char.medians.short$xgb_r_opt_bot)
glm_opt_ptf = c(char.medians.long$glm_opt_top,char.medians.short$glm_opt_bot)
ols_opt_ptf = c(char.medians.long$ols_opt_top,char.medians.short$ols_opt_bot)
xgb_c_td_ptf = c(char.medians.long$xgb_c_td_top,char.medians.short$xgb_c_td_bot)
xgb_r_td_ptf = c(char.medians.long$xgb_r_td_top,char.medians.short$xgb_r_td_bot)
glm_td_ptf = c(char.medians.long$glm_td_top,char.medians.short$glm_td_bot)
ols_td_ptf = c(char.medians.long$ols_td_top,char.medians.short$ols_td_bot)
OPT = cbind.data.frame(xgb_c_opt_ptf,xgb_r_opt_ptf,glm_opt_ptf,ols_opt_ptf)
OPT = cbind.data.frame(xgb_c_opt_ptf,xgb_r_opt_ptf,glm_opt_ptf,ols_opt_ptf)
BM = cbind.data.frame(xgb_c_td_ptf,xgb_r_td_ptf,glm_td_ptf,ols_td_ptf)
colMeans((OPT-BM)^2)
colSums((OPT-BM)^2)
OPT[1,]
OPT = 100*cbind.data.frame(xgb_c_opt_ptf,xgb_r_opt_ptf,glm_opt_ptf,ols_opt_ptf)
BM = 100*cbind.data.frame(xgb_c_td_ptf,xgb_r_td_ptf,glm_td_ptf,ols_td_ptf)
colMeans((OPT-BM)^2)
OPT-BM
colMeans((OPT-BM)^2)
diffs = colSums((OPT-BM)^2)
diffs[]
rel = (OPT-BM)^2/colSums((OPT-BM)^2)
View(rel)
rownames(rel) <- c(rownames(char.medians.long),rownames(char.medians.short))
rel$vars = c(rownames(char.medians.long),rownames(char.medians.short))
View(rel)
diffs
colnames(char.gap)
tmp = char.gap[,c('xgb_c_opt_diff','xgb_c_td_diff')]
tmp$id = rownames(char.gap)
char.gap.melt = reshape2::melt(tmp)
head(char.gap.melt)
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(-1,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
tmp = char.medians.long[,c('xgb_c_opt_diff','xgb_c_td_diff')]
tmp$id = rownames(char.gap)
char.gap.melt = reshape2::melt(tmp)
head(char.gap.melt)
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(-1,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
tmp = char.medians.long[,c('xgb_c_opt_diff','xgb_c_td_diff')]
tmp = char.medians.long[,c('xgb_c_opt_top','xgb_c_td_top')]
tmp$id = rownames(char.gap)
char.gap.melt = reshape2::melt(tmp)
head(char.gap.melt)
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(-1,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
ggplot(char.gap.melt, aes(x = id, y = value, color=variable),xlim=c(-1,1)) +
geom_point(size = 2) +         # plot the 8 points
geom_line(aes(group = id), color = "gray") +# connect the points vertically
coord_flip() +   ylim(0,1) +                               # flip to make lines vertical
theme_minimal() +
labs(title = "Characteristic Values by Group",
x = "Group",
y = "Characteristic Value")
(abs(char.medians.long-0.5))
(abs(char.medians.long$xgb_c_opt_top-0.5))
mean( (abs(char.medians.long$xgb_c_opt_top-0.5))>(abs(char.medians.long$xgb_c_td_top-0.5)) )
mean( (abs(char.medians.long$xgb_r_opt_top-0.5))>(abs(char.medians.long$xgb_r_td_top-0.5)) )
mean( (abs(char.medians.long$ols_opt_top-0.5))>(abs(char.medians.long$ols_td_top-0.5)) )
mean( (abs(char.medians.long$glm_opt_top-0.5))>(abs(char.medians.long$glm_td_top-0.5)) )
xtremes = abs(char.medians.long-0.5)
colMeans(xtremes)
cor(char.medians.long)
heatmap(cor(char.medians.long))
cm.long = cor(char.medians.long)
cm.short = cor(char.medians.short)
cm.long
heatmap(cm.long,symm = TRUE,Colv = NA)
heatmap(cm.long,symm = TRUE,Colv = NA,Rowv = NA)
?heatmap
heatmap(cm.long,symm = TRUE,Colv = NA,Rowv = NA,reorderfun = identity)
heatmap(cm.long,Colv = NA,Rowv = NA)
heatmap(cm.long,Colv = NA,Rowv = NA,scale=None)
heatmap(cm.long,Colv = NA,Rowv = NA,scale='None')
heatmap(cm.long,Colv = NA,Rowv = NA,scale='none')
head(cm.long)
library(pheatmap)
install.packages('pheatmap')
pheatmap(cm.long)
library(pheatmap)
pheatmap(cm.long)
pheatmap(cm.long,display_numbers = TRUE)
chars = cbind(char.medians.long,char.medians.short)
cm = cor(chars)
pheatmap(cm,display_numbers = TRUE)
pheatmap(cm.long,display_numbers = TRUE)
pheatmap(cm.short,display_numbers = TRUE)
par(mfrow=c(1,2))
pheatmap(cm.long,display_numbers = TRUE)
pheatmap(cm.short,display_numbers = TRUE)
pheatmap(cm.long,display_numbers = TRUE)
pheatmap(cor(char.gap),display_numbers = TRUE)
kmeans(char.gap,centers = 4)
kmeans(t(char.gap),centers = 4)
kmeans(t(char.gap),centers = 4,nstart = 100)
kmeans(t(char.gap),centers = 4,nstart = 100)
kmeans(t(char.gap),centers = 4,nstart = 100)
kmeans(t(char.gap),centers = 4,nstart = 100)
kmeans(t(char.gap),centers = 4,nstart = 100)
rm(list=ls())
function (x)
library(dplyr)
library(lubridate)
library(xtable)
source('../utils.R')
# Load portfolio data.
data.glm <- readRDS('../03_PortfolioConstruction/GLM_Portfolios.RDS')
data.ols <- readRDS('../03_PortfolioConstruction/OLS_Portfolios.RDS')
data.xgb.c <- readRDS('../03_PortfolioConstruction/XGBC_Portfolios.RDS')
data.xgb.r <- readRDS('../03_PortfolioConstruction/XGBR_Portfolios.RDS')
# We just need a subset of the variables:
data.glm <- data.glm %>% select(permno,date,glm_pg90,glm_pleq10,glm_td_top,glm_td_bot,
glm_opt_top,glm_opt_bot)
head(data.glm)
colnames(data.glm)
dim(data.glm)
data = readRDS('../04_LambdaSelection/PortfolioData.RDS')
head(data)
# Load portfolio data.
data <-  readRDS('../04_LambdaSelection/PortfolioData.RDS')
head(data)
################# Figure ROC ###################################################
roc_data <- data %>% group_by(date) %>%
mutate('top_ret' = ret_dec==9)
roc_data <- roc_data[,which(colnames(roc_data) %in% c('permno','date',
'xgb_r_pg90','xgb_c_pg90',
'glm_pg90','ols_pg90','top_ret'))]
roc_data <- roc_data %>% filter(date>='1987-01-01')
pct_seq <- seq(0,1,0.01)
FPR <- TPR <- matrix(NA,nrow=length(pct_seq),ncol=8)
library(pROC)
rm(list=ls())
library(dplyr)
library(lubridate)
library(xtable)
library(pROC)
# Load portfolio data.
data <-  readRDS('../04_LambdaSelection/PortfolioData.RDS')
data$top_ret = data$ret_dec==9
data$bot_ret = data$ret_dec==0
roc_ols_top   <- roc(data$top_ret,ptf.data$ols_pg90)
roc_ols_top   <- roc(data$top_ret,data$ols_pg90)
roc_xgb_r_top <- roc(data$top_ret,data$xgb_r_pg90)
roc_glm_top   <- roc(data$top_ret,data$glm_pg90)
roc_xgb_c_top <- roc(data$top_ret,data$xgb_c_pg90)
auc_ols_top <- auc(roc_ols_top)
auc_glm_top <- auc(roc_glm_top)
auc_xgb_r_top <- auc(roc_xgb_r_top)
auc_xgb_c_top <- auc(roc_xgb_c_top)
npoints = 10000
sel.idx.xgbc = round(seq(1,length(roc_xgb_c_top$specificities),length.out=npoints))
sel.idx.xgbr = round(seq(1,length(roc_xgb_r_top$specificities),length.out=npoints))
sel.idx.ols = round(seq(1,length(roc_ols_top$specificities),length.out=npoints))
sel.idx.glm = round(seq(1,length(roc_glm_top$specificities),length.out=npoints))
plot(1-roc_xgb_c_top$specificities[sel.idx.xgbc], roc_xgb_c_top$sensitivities[sel.idx.xgbc],xlim=c(0,1),t='l',col='#00a0b0',lwd=2,lty=1,xlab='False Positive Rate',
ylab='True Positive Rate',ax=F)
axis(side=1,at=seq(0,1,0.1),labels = seq(0,1,0.1))
axis(side=2,at=seq(0,1,0.1),labels = seq(0,1,0.1))
box()
lines(1-roc_glm_top$specificities[sel.idx.glm], roc_glm_top$sensitivities[sel.idx.glm],col='#cc3340',lwd=2,lty=1)
lines(1-roc_xgb_r_top$specificities[sel.idx.xgbr], roc_xgb_r_top$sensitivities[sel.idx.xgbr],col='#00a0b0',lwd=2,lty=3)
lines(1-roc_ols_top$specificities[sel.idx.ols], roc_ols_top$sensitivities[sel.idx.ols],col='#cc3340',lwd=2,lty=3)
abline(a=0,b=1,lty='dotted')
abline(v=seq(0,1,0.1),h=seq(0,1,0.1),lty=2,col=rgb(0,0,0,1/6))
points(ols_td_top_fpr,ols_td_top_tpr,pch=20,cex=1.5,col='#cc3340')
points(xgb_r_td_top_fpr,xgb_r_td_top_tpr,pch=20,cex=1.5,col='#00a0b0')
grid()
par(mfrow=c(1,1))
plot(1-roc_xgb_c_top$specificities[sel.idx.xgbc], roc_xgb_c_top$sensitivities[sel.idx.xgbc],xlim=c(0,1),t='l',col='#00a0b0',lwd=2,lty=1,xlab='False Positive Rate',
ylab='True Positive Rate',ax=F)
axis(side=1,at=seq(0,1,0.1),labels = seq(0,1,0.1))
axis(side=2,at=seq(0,1,0.1),labels = seq(0,1,0.1))
box()
lines(1-roc_glm_top$specificities[sel.idx.glm], roc_glm_top$sensitivities[sel.idx.glm],col='#cc3340',lwd=2,lty=1)
lines(1-roc_xgb_r_top$specificities[sel.idx.xgbr], roc_xgb_r_top$sensitivities[sel.idx.xgbr],col='#00a0b0',lwd=2,lty=3)
lines(1-roc_ols_top$specificities[sel.idx.ols], roc_ols_top$sensitivities[sel.idx.ols],col='#cc3340',lwd=2,lty=3)
abline(a=0,b=1,lty='dotted')
abline(v=seq(0,1,0.1),h=seq(0,1,0.1),lty=2,col=rgb(0,0,0,1/6))
points(ols_td_top_fpr,ols_td_top_tpr,pch=20,cex=1.5,col='#cc3340')
points(xgb_r_td_top_fpr,xgb_r_td_top_tpr,pch=20,cex=1.5,col='#00a0b0')
grid()
legend('bottomright',c(
sprintf('XGB(C), AUC: %.2f ', auc_xgb_c_top),
sprintf('GLM, AUC: %.2f ', auc_glm_top),
sprintf('XGB(R), AUC: %.2f ', auc_xgb_r_top),
sprintf('OLS, AUC: %.2f ', auc_ols_top),
'Random Classifier','Top Decile'),col = c('#00a0b0','#cc3340','#00a0b0','#cc3340','black','black'),
lty=c(1,1,3,3,2,NA),pch=c(NA,NA,NA,NA,NA,20),lwd=3,ncol=3,bg='white')
ols_td_top_tpr <- sum(ptf.data$top_ret*ptf.data$ols_td_top)/sum(ptf.data$top_ret*ptf.data$ols_td_top + ptf.data$top_ret*(ptf.data$ols_td_top==0))
ols_td_top_tpr <- sum(data$top_ret*data$ols_td_top)/sum(data$top_ret*data$ols_td_top + data$top_ret*(data$ols_td_top==0))
ols_td_top_fpr <- sum((data$top_ret==0)*data$ols_td_top)/sum((data$top_ret==0)*data$ols_td_top + (data$top_ret==0)*(data$ols_td_top==0))
xgb_r_td_top_tpr <- sum(data$top_ret*data$xgb_r_td_top)/sum(data$top_ret*data$xgb_r_td_top + data$top_ret*(data$xgb_r_td_top==0))
xgb_r_td_top_fpr <- sum((data$top_ret==0)*data$xgb_r_td_top)/sum((data$top_ret==0)*data$xgb_r_td_top + (data$top_ret==0)*(data$xgb_r_td_top==0))
idx.xgbc = which.min( abs( (1-roc_xgb_c_top$specificities)-xgb_r_td_top_fpr))
roc_xgb_c_top$sensitivities[idx.xgbc]
idx.glm = which.min( abs( (1-roc_glm_top$specificities)-xgb_r_td_top_fpr))
roc_glm_top$sensitivities[idx.glm]
npoints = 10000
sel.idx.xgbc = round(seq(1,length(roc_xgb_c_top$specificities),length.out=npoints))
sel.idx.xgbr = round(seq(1,length(roc_xgb_r_top$specificities),length.out=npoints))
sel.idx.ols = round(seq(1,length(roc_ols_top$specificities),length.out=npoints))
sel.idx.glm = round(seq(1,length(roc_glm_top$specificities),length.out=npoints))
plot(1-roc_xgb_c_top$specificities[sel.idx.xgbc], roc_xgb_c_top$sensitivities[sel.idx.xgbc],xlim=c(0,1),t='l',col='#00a0b0',lwd=2,lty=1,xlab='False Positive Rate',
ylab='True Positive Rate',ax=F)
axis(side=1,at=seq(0,1,0.1),labels = seq(0,1,0.1))
axis(side=2,at=seq(0,1,0.1),labels = seq(0,1,0.1))
box()
lines(1-roc_glm_top$specificities[sel.idx.glm], roc_glm_top$sensitivities[sel.idx.glm],col='#cc3340',lwd=2,lty=1)
lines(1-roc_xgb_r_top$specificities[sel.idx.xgbr], roc_xgb_r_top$sensitivities[sel.idx.xgbr],col='#00a0b0',lwd=2,lty=3)
lines(1-roc_ols_top$specificities[sel.idx.ols], roc_ols_top$sensitivities[sel.idx.ols],col='#cc3340',lwd=2,lty=3)
abline(a=0,b=1,lty='dotted')
abline(v=seq(0,1,0.1),h=seq(0,1,0.1),lty=2,col=rgb(0,0,0,1/6))
points(ols_td_top_fpr,ols_td_top_tpr,pch=20,cex=1.5,col='#cc3340')
points(xgb_r_td_top_fpr,xgb_r_td_top_tpr,pch=20,cex=1.5,col='#00a0b0')
mean(data$ols_pg90[data$ols_td_bot] > 0.5)
mean(data$ols_pg90[data$ols_td_bot] >= 0.5 , na.rm=TRUE)
mean(data$ols_pg90[data$ols_td_top] >= 0.5 , na.rm=TRUE)
mean(data$ols_pg90[data$ols_td_top])
min(data$ols_pg90[data$ols_td_top] , na.rm=TRUE)
min(data$ols_pg90[which(data$ols_td_top)] , na.rm=TRUE)
View(data)
rm(list=ls())
